@page "/posts/overview"
@using PPTWebApp.Data.Models
@using PPTWebApp.Data.Services
@inject PostService PostService

<div class="overview-posts-container">
    <h3 class="text-center">All Posts</h3>

    <div class="query-bar-container mb-4">
        <div class="query-bar">
            <div class="row gx-3 justify-content-center">
                <div class="col-md-3 mb-2">
                    <input type="text" placeholder="Search posts..." class="form-control"
                           @bind="SearchInput" @oninput="OnSearchInputChange" />
                </div>

                <div class="col-md-2 mb-2">
                    <select class="form-select" @onchange="OnSortByChange">
                        <option value="Newest First" selected="@(SortBy == "Newest First")">Newest First</option>
                        <option value="Oldest First" selected="@(SortBy == "Oldest First")">Oldest First</option>
                    </select>
                </div>

                <div class="col-md-3 mb-2">
                    <select class="form-select">
                        <option value="all">All Categories</option>
                        <option value="news">News</option>
                        <option value="technology">Technology</option>
                        <option value="lifestyle">Lifestyle</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="container mt-4">
        <div class="row">
            @foreach (var post in Posts)
            {
                <div class="col-12 col-md-6 col-lg-3 mb-4 d-flex align-items-stretch">
                    <PostPreview Post="post" />
                </div>
            }
        </div>
    </div>

    <div class="pagination">
        <button class="pagination-btn" @onclick="LoadPreviousPage" disabled="@((PageIndex == 0))">←</button>
        <span class="pagination-text">Page</span>
        <input type="number" value="@(PageIndex + 1)" min="1" max="@TotalPages" class="page-input" @onchange="OnPageInputChange" />
        <span class="pagination-text">of @TotalPages</span>
        <button class="pagination-btn" @onclick="LoadNextPage" disabled="@((PageIndex == TotalPages - 1))">→</button>
    </div>

</div>

@code {
    private IEnumerable<Post> Posts { get; set; } = Enumerable.Empty<Post>();
    private string SearchInput = "";
    private string SortBy = "Newest First";
    private int MaxPostsToDisplay = 8;
    private int PageIndex = 0;
    private int TotalPosts = 0;
    private int TotalPages => (int)Math.Ceiling((double)TotalPosts / MaxPostsToDisplay);

    protected override void OnInitialized()
    {
        TotalPosts = PostService.GetTotalPostCount(null);
        LoadPosts();
    }

    private void LoadPosts()
    {
        TotalPosts = PostService.GetTotalPostCount(SearchInput);
        Posts = PostService.GetPostsInRange(SearchInput, PageIndex * MaxPostsToDisplay, MaxPostsToDisplay);
    }

    private void LoadNextPage()
    {
        if (PageIndex < TotalPages - 1)
        {
            PageIndex++;
            LoadPosts();
        }
    }

    private void LoadPreviousPage()
    {
        if (PageIndex > 0)
        {
            PageIndex--;
            LoadPosts();
        }
    }

    private void OnPageInputChange(ChangeEventArgs e)
    {
        if (e.Value != null && int.TryParse(e.Value.ToString(), out var inputPage))
        {
            inputPage = Math.Max(1, Math.Min(TotalPages, inputPage));
        }
        else
        {
            inputPage = 1;
        }

        PageIndex = inputPage - 1;
        LoadPosts();
    }


    private void OnSearchInputChange(ChangeEventArgs e)
    {
        SearchInput = e.Value?.ToString() ?? string.Empty;
        PageIndex = 0;
        LoadPosts();
    }

    private void OnSortByChange(ChangeEventArgs e)
    {
        SortBy = e.Value?.ToString() ?? "Newest First";
        PageIndex = 0;
        LoadPosts();
    }
}
