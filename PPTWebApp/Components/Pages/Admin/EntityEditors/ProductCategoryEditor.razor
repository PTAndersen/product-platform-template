@page "/admin/edit/categories/{id:int}"
@using PPTWebApp.Data.Models
@using PPTWebApp.Data.Services

@inject ProductCategoryService ProductCategoryService
@inject NavigationManager NavigationManager

<div class="product-category-editor-container">
    <h2>Edit Product Category</h2>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
    else if (productCategory == null)
    {
        <div>Loading category details...</div>
    }
    else
    {
        <EditForm Model="productCategory" OnValidSubmit="SaveChanges">
            <div class="form-group">
                <label for="name">Category Name</label>
                <InputText id="name" class="form-control" @bind-Value="productCategory.Name" />
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <InputTextArea id="description" class="form-control" @bind-Value="productCategory.Description" />
            </div>

            <button type="submit" class="btn btn-primary">Save Changes</button>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int id { get; set; }
    private ProductCategory? productCategory;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productCategory = await ProductCategoryService.GetCategoryByIdAsync(id, CancellationToken.None);
            if (productCategory == null)
            {
                errorMessage = "Product Category not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading category: {ex.Message}";
        }
    }

    private async Task SaveChanges()
    {
        if (productCategory != null)
        {
            try
            {
                await ProductCategoryService.UpdateCategoryAsync(productCategory, CancellationToken.None);
                NavigationManager.NavigateTo("/admin/categories");
            }
            catch (Exception ex)
            {
                errorMessage = $"Error saving category: {ex.Message}";
            }
        }
    }
}
