@page "/admin/edit/inventories/{id:int}"
@using PPTWebApp.Data.Models
@using PPTWebApp.Data.Services


@inject ProductInventoryService ProductInventoryService
@inject NavigationManager NavigationManager

<div class="product-inventory-editor-container">
    <h2>Edit Product Inventory</h2>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
    else if (productInventory == null)
    {
        <div>Loading inventory details...</div>
    }
    else
    {
        <EditForm Model="productInventory" OnValidSubmit="SaveChanges">
            <div class="form-group">
                <label for="quantity">Quantity</label>
                <InputNumber id="quantity" class="form-control" @bind-Value="productInventory.Quantity" />
            </div>

            <button type="submit" class="btn btn-primary">Save Changes</button>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int id { get; set; }
    private ProductInventory? productInventory;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            
            productInventory = await ProductInventoryService.GetProductInventoryByIdAsync(id, CancellationToken.None);
            if (productInventory == null)
            {
                errorMessage = "Product Inventory not found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading inventory: {ex.Message}";
        }
    }

    private async Task SaveChanges()
    {
        if (productInventory != null)
        {
            try
            {
                await ProductInventoryService.UpdateProductInventoryAsync(productInventory, CancellationToken.None);
                NavigationManager.NavigateTo("/admin/inventories");
            }
            catch (Exception ex)
            {
                errorMessage = $"Error saving inventory: {ex.Message}";
            }
        }
    }
}