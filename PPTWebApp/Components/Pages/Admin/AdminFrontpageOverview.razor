@page "/admin/frontpage-overview"
@using Microsoft.AspNetCore.Identity
@using PPTWebApp.Components.Layout
@using PPTWebApp.Data
@inject NavigationManager Navigation
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<div class="frontpage-overview-scroll-container">
    <h1>Frontpage Overview</h1>

    @if (isAdmin)
    {
        <div class="frontpage-admin-container">
            <h1>Manage Frontpage Highlights</h1>

            <div class="highlight-section">
                <h3>Highlight 1</h3>
                <div class="form-group">
                    <label for="highlight1">Select Item to Highlight:</label>
                    <select id="highlight1" class="form-control" @onchange="(e) => OnHighlightSelectionChanged(e, 1)">
                        <option value="">-- Select an Item --</option>
                        @foreach (var item in Items)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
                <div class="highlight-preview">
                    <p><strong>Preview:</strong> @selectedHighlight1</p>
                </div>
            </div>

            <div class="highlight-section">
                <h3>Highlight 2</h3>
                <div class="form-group">
                    <label for="highlight2">Select Item to Highlight:</label>
                    <select id="highlight2" class="form-control" @onchange="(e) => OnHighlightSelectionChanged(e, 2)">
                        <option value="">-- Select an Item --</option>
                        @foreach (var item in Items)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
                <div class="highlight-preview">
                    <p><strong>Preview:</strong> @selectedHighlight2</p>
                </div>
            </div>

            <div class="highlight-section">
                <h3>Highlight 3</h3>
                <div class="form-group">
                    <label for="highlight3">Select Item to Highlight:</label>
                    <select id="highlight3" class="form-control" @onchange="(e) => OnHighlightSelectionChanged(e, 3)">
                        <option value="">-- Select an Item --</option>
                        @foreach (var item in Items)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                </div>
                <div class="highlight-preview">
                    <p><strong>Preview:</strong> @selectedHighlight3</p>
                </div>
            </div>

            <button class="btn btn-primary">Save Highlights</button>
        </div>
    }
    else
    {
        <p>You do not have access to this page.</p>
    }
</div>

@code {
    private bool isAdmin = false;

    private List<string> Items = new List<string> { "Product A", "Event B", "Blog Post C", "Service D" };

    private string selectedHighlight1;
    private string selectedHighlight2;
    private string selectedHighlight3;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var currentUser = await UserManager.GetUserAsync(user);
            if (await UserManager.IsInRoleAsync(currentUser, "Admin"))
            {
                isAdmin = true;
            }
        }

        if (!isAdmin)
        {
            Navigation.NavigateTo("/");
        }
    }

    private void OnHighlightSelectionChanged(ChangeEventArgs e, int highlightNumber)
    {
        var selectedValue = e.Value.ToString();

        switch (highlightNumber)
        {
            case 1:
                selectedHighlight1 = selectedValue;
                break;
            case 2:
                selectedHighlight2 = selectedValue;
                break;
            case 3:
                selectedHighlight3 = selectedValue;
                break;
        }
    }
}
