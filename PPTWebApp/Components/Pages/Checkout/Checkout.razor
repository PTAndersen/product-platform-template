@page "/checkout"
@using Microsoft.AspNetCore.Identity
@using PPTWebApp.Data
@using PPTWebApp.Data.Models
@using PPTWebApp.Data.Services
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject BasketService BasketService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="checkout-page">
    <div class="checkout-container">
        <h1>Checkout</h1>

        @if (!isLoggedIn)
        {
            <div class="form-group">
                <label for="email">Enter your email:</label>
                <input type="email" id="email" class="form-control" @bind="email" placeholder="Enter your email for the order" />
            </div>
        }
        @if (BasketService.GetBasketItems().Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="thead-light">
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in BasketService.GetBasketItems())
                        {
                            <tr>
                                <td class="d-flex align-items-center">
                                    <img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="product-image me-3" />
                                    <span>@item.Product.Name</span>
                                </td>
                                <td>@item.Quantity</td>
                                <td>@item.Product.Price.ToString("C")</td>
                                <td>@($"{item.Product.Price * item.Quantity:C}")</td>
                                <td>
                                    <button class="btn btn-outline-secondary btn-sm" @onclick="() => DecreaseQuantity(item)">-</button>
                                    <button class="btn btn-outline-secondary btn-sm" @onclick="() => IncreaseQuantity(item)">+</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between">
                <strong>Total Price: @BasketService.GetTotalPrice().ToString("C")</strong>
            </div>

            <div class="d-flex justify-content-end mt-3">
                <button class="btn btn-primary" @onclick="ProceedToPayment">Proceed to Payment</button>
            </div>
        }
        else
        {
            <p>Your basket is empty. <a href="/products">Continue shopping</a>.</p>
        }
    </div>
</div>


@code {
    private bool isLoggedIn = false;
    private string email = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isLoggedIn = user.Identity.IsAuthenticated;

        if (isLoggedIn)
        {
            var currentUser = await UserManager.GetUserAsync(user);
            email = currentUser?.Email ?? string.Empty;
        }
    }

    private void IncreaseQuantity(BasketItem item)
    {
        BasketService.AddToBasket(item.Product, 1);
        StateHasChanged();
    }

    private void DecreaseQuantity(BasketItem item)
    {
        if (item.Quantity > 1)
        {
            item.Quantity--;
        }
        else
        {
            BasketService.RemoveFromBasket(item);
        }
        StateHasChanged();
    }

    private void ProceedToPayment()
    {
        if (!isLoggedIn && string.IsNullOrEmpty(email))
        {
            Console.WriteLine("Please provide an email address.");
            return;
        }

        NavigationManager.NavigateTo("/payment");
    }
}
