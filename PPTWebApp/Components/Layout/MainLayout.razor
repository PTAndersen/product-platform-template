@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using PPTWebApp.Data
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase

<header class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            <img src="images/logo.png" alt="Logo" height="40" />
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/">Home</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/products/highlighted">Main Products</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/products">Other Products</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/posts">Posts</NavLink>
                </li>
                @if (isAdmin)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/admin">Admin Panel</NavLink>
                    </li>
                }
            </ul>
            <ul class="navbar-nav ms-auto">
                @if (!isLoggedIn)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/account/login">Login</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/account/register">Register</NavLink>
                    </li>
                }
                else
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @userName
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/account/profile">Profile</a></li>
                            <li><a class="dropdown-item" href="#" @onclick="Logout">Logout</a></li>
                        </ul>
                    </li>
                }
            </ul>
        </div>
    </div>
</header>

<main>
    @Body
</main>



@code {
    private bool isLoggedIn = false;
    private bool isAdmin = false;
    private string userName = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isLoggedIn = user.Identity.IsAuthenticated;
        
        if (isLoggedIn)
        {
            userName = user.Identity.Name;
            isAdmin = await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(user), "Admin");
        }
    }

    private async Task Logout()
    {
        await SignInManager.SignOutAsync();
        NavigationManager.NavigateTo("/");
    }
}
